version: '3.7'

services:
  staging_app:
    build:
      context: .
      dockerfile: ./deployments/production/go/Dockerfile
    image: go_fast_staging_app
    restart: always
    command:
      ['/wait-for', 'staging_postgres:5432', '--', '/webserver', '-p', '9000']
    depends_on:
      - staging_postgres
    env_file:
      - ./.envs/.staging/.postgres
    expose:
      - '9000'
    networks:
      - go_fast_staging
      - default
    labels:
      - 'traefik.docker.network=go_fast_staging'
      - 'traefik.enable=true'
      - 'traefik.basic.frontend.rule=Host:go-fast-staging.djangulo.com'
      - 'traefik.basic.port=9000'
      - 'traefik.basic.protocol=http'

  #  Needs a different name from prod, as they'll live in the same machine
  staging_postgres:
    build:
      context: .
      dockerfile: ./deployments/production/postgres/Dockerfile
    healthcheck:
      test: ['CMD', 'sh', '-c', '/usr/local/bin/healthcheck']
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 30s
    image: go_fast_staging_postgres
    volumes:
      - staging_postgres_data:/var/lib/postgresql/data
      - staging_postgres_backups:/backups
    env_file:
      - ./.envs/.staging/.postgres

volumes:
  staging_postgres_data: {}
  staging_postgres_backups: {}

networks:
  go_fast_staging:
    external: true
